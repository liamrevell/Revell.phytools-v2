## points(pp$x,pp$y,col=cols,pch=16,cex=)
text(pp$x,pp$y,pp$states,col=c("black","black","white","white"))
dev.off()
?mapply
mapply(rep, 1:4, 4:1)
cols<-setNames(c("#FFE5B4","#F0EAD6","#E97451","#880808"),
colnames(liolaemid.hrm_asr$ace))
plot(liolaemid.hrm_asr,legend=FALSE,
args.plotTree=list(type="arc",arc_height=0.5,fsize=0.25,offset=5),
args.nodelabels=list(piecol=cols,cex=0.3),
args.tiplabels=list(cex=0.15))
pp<-plot(liolaemid.hrm,add=TRUE,xlim=c(-4,2),ylim=c(-1.3,4.7),
spacer=0.2,offset=0.1)
mapply(plotrix::draw.circle,x=pp$x,y=pp$y,col=cols,
MoreArgs=list(radius=strheight("0"),border="transparent"))
?hid
cols<-setNames(c("#FFE5B4","#F0EAD6","#E97451","#880808"),
colnames(liolaemid.hrm_asr$ace))
plot(liolaemid.hrm_asr,legend=FALSE,
args.plotTree=list(type="arc",arc_height=0.5,fsize=0.2,offset=5),
args.nodelabels=list(piecol=cols,cex=0.3),
args.tiplabels=list(cex=0.15))
pp<-plot(liolaemid.hrm,add=TRUE,xlim=c(-4,2),ylim=c(-1.3,4.7),
spacer=0.2,offset=0.1)
invisiblemapply(plotrix::draw.circle,x=pp$x,y=pp$y,col=cols,
MoreArgs=list(radius=strheight("0"),border="transparent")))
cols<-setNames(c("#FFE5B4","#F0EAD6","#E97451","#880808"),
colnames(liolaemid.hrm_asr$ace))
plot(liolaemid.hrm_asr,legend=FALSE,
args.plotTree=list(type="arc",arc_height=0.5,fsize=0.2,offset=5),
args.nodelabels=list(piecol=cols,cex=0.3),
args.tiplabels=list(cex=0.15))
pp<-plot(liolaemid.hrm,add=TRUE,xlim=c(-4,2),ylim=c(-1.3,4.7),
spacer=0.2,offset=0.1)
invisible(mapply(plotrix::draw.circle,x=pp$x,y=pp$y,col=cols,
MoreArgs=list(radius=strheight("0"),border="transparent")))
## points(pp$x,pp$y,col=cols,pch=16,cex=)
text(pp$x,pp$y,pp$states,col=c("black","black","white","white"))
liolaemid.mk<-fitHRM(liolaemid.tree,liolaemiod.parity,ncat=1,
pi="fitzjohn",parallel=TRUE)
liolaemid.mk<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=1,
pi="fitzjohn",parallel=TRUE)
liolaemid.full<-fitHRM(liolaemid.tree,liolaemiod.parity,ncat=2,
pi="fitzjohn",parallel=TRUE)
liolaemid.mk<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=1,
pi="fitzjohn",parallel=TRUE,quiet=TRUE)
liolaemid.full<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=2,
pi="fitzjohn",parallel=TRUE,quiet=TRUE)
anova(liolaemid.mk,liolaemid.hrm,liolaemid.full)
data(liolaemid.tree)
data(liolaemid.data)
ls()
library(knitr)
tidy.opts = list(blank = FALSE, width.cutoff = 60)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
library(phytools)
packageVersion("phytools")
data(sunfish.tree)
data(sunfish.data)
sunfish.feed_mode<-setNames(sunfish.data$feeding.mode,
rownames(sunfish.data))
levels(sunfish.feed_mode)
levels(sunfish.feed_mode)<-c("non-piscivorous",
"piscivorous")
levels(sunfish.feed_mode)
sunfish.ER_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ER")
sunfish.ARD_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ARD")
sunfish.Irr1_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,1,0,0),2,2,
byrow=TRUE))
sunfish.Irr2_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,0,1,0),2,2,
byrow=TRUE))
sunfish.aov<-anova(sunfish.ER_model,
sunfish.Irr1_model,sunfish.Irr2_model,
sunfish.ARD_model)
load("sunfish.simmap.rda")
sunfish.simmap
cols<-setNames(viridisLite::viridis(n=2),
levels(sunfish.feed_mode))
par(mfrow=c(2,3))
plot(sample(sunfish.simmap,6),ftype="i",
fsize=0.6,colors=cols,offset=0.2)
plot(summary(sunfish.simmap),ftype="i",
fsize=0.7,colors=cols,cex=c(0.6,0.3))
legend("topleft",levels(sunfish.feed_mode),pch=21,
pt.cex=1.5,pt.bg=cols,bty="n",cex=0.8)
sunfish.density<-density(sunfish.simmap)
sunfish.density
par(mfrow=c(1,2),las=1,cex.axis=0.7,
cex.lab=0.8)
COLS<-setNames(cols[2:1],sunfish.density$trans)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[1],colors=COLS[1],
main="")
mtext("a) transitions to piscivory",line=1,
adj=0,cex=0.8)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[2],colors=COLS[2],
main="")
mtext("b) transitions to non-piscivory",
line=1,adj=0,cex=0.8)
load("sunfish.densityMap.rda")
sunfish.densityMap
sunfish.densityMap<-setMap(sunfish.densityMap,
viridisLite::viridis(n=10))
plot(sunfish.densityMap,lwd=3,outline=TRUE,
fsize=0.7,legend=0.1)
par(mfrow=c(1,2))
graph.polyMk(k=4,ordered=TRUE,states=0:3,
mar=rep(0.1,4))
mtext("a) ordered polymorphic model",line=-1,
adj=0.2,cex=0.8)
graph.polyMk(k=4,ordered=FALSE,
states=letters[1:4],mar=rep(0.1,4),
spacer=0.15)
mtext("b) unordered polymorphic model",
line=-1,adj=0.2,cex=0.8)
data(butterfly.tree)
data(butterfly.data)
head(butterfly.data)
butterfly.habitat<-setNames(
butterfly.data$habitat,
rownames(butterfly.data))
print(levels(butterfly.habitat))
load("butterfly.fitted_models.rda")
anova(butterfly.ER_unordered,
butterfly.ARD_unordered,
butterfly.transient_unordered)
levs<-c("forest","fringe","open")
levs
butterfly.aov<-anova(butterfly.ER_ordered,
butterfly.ER_unordered,
butterfly.transient_ordered,
butterfly.transient_unordered,
butterfly.ARD_ordered,
butterfly.ARD_unordered)
plot(butterfly.ARD_ordered,asp=0.65,
mar=rep(0.1,4),cex.traits=0.8)
legend("bottomleft",legend=c(
paste("log(L) =",
round(logLik(butterfly.ARD_ordered),2)),
paste("AIC =",
round(AIC(butterfly.ARD_ordered),2))),
bty="n",cex=0.8)
load("butterfly.simmap.rda")
butterfly.simmap
butterfly.summary<-summary(butterfly.simmap)
hab.cols<-setNames(c(rgb(0,1,0),
rgb(0,0.5,0.5),rgb(1/3,1/3,1/3),
rgb(0,0,1),rgb(0.5,0.5,0),
rgb(1,0,0)),levels(butterfly.habitat))
par(fg="transparent")
h<-max(nodeHeights(butterfly.tree))
plot(butterfly.summary,type="arc",
ftype="off",colors=hab.cols,
cex=c(0.4,0.2),part=0.5,lwd=1,
arc_height=0.4)
par(fg="black")
legend("topleft",names(hab.cols),pch=21,
pt.bg=hab.cols,pt.cex=1.5,
cex=0.8,bty="n")
axis(1,pos=-1,at=h-seq(0,h,by=5)+0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
axis(1,pos=-1,at=-h+seq(0,h,by=5)-0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
butterfly.ltt<-ltt(butterfly.simmap)
par(mar=c(5.1,4.1,1.1,1.1))
plot(butterfly.ltt,show.total=FALSE,
bty="n",las=1,cex.axis=0.7,
cex.lab=0.8,colors=hab.cols)
data(liolaemid.tree)
data(liolaemid.data)
head(liolaemid.data)
liolaemid.parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
head(liolaemid.parity)
load(file="liolaemid.hrm.rda")
liolaemid.hrm
cols<-setNames(c("#FFE5B4","#F0EAD6","#E97451","#880808"),
colnames(liolaemid.hrm_asr$ace))
liolaemid.hrm_asr<-ancr(liolaemid.hrm,tips=TRUE)
print(liolaemid.hrm_asr,printlen=12)
cols<-setNames(c("#FFE5B4","#F0EAD6","#E97451","#880808"),
colnames(liolaemid.hrm_asr$ace))
plot(liolaemid.hrm_asr,legend=FALSE,
args.plotTree=list(type="arc",arc_height=0.5,fsize=0.2,offset=5),
args.nodelabels=list(piecol=cols,cex=0.3),
args.tiplabels=list(cex=0.15))
pp<-plot(liolaemid.hrm,add=TRUE,xlim=c(-4,2),ylim=c(-1.3,4.7),
spacer=0.2,offset=0.1)
invisible(mapply(plotrix::draw.circle,x=pp$x,y=pp$y,col=cols,
MoreArgs=list(radius=strheight("0"),border="transparent")))
## points(pp$x,pp$y,col=cols,pch=16,cex=)
text(pp$x,pp$y,pp$states,col=c("black","black","white","white"))
?make.simmap
head(liolaemid.data)
liolaemid.parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
head(liolaemid.parity)
library(knitr)
tidy.opts = list(blank = FALSE, width.cutoff = 60)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
library(phytools)
packageVersion("phytools")
data(sunfish.tree)
data(sunfish.data)
sunfish.feed_mode<-setNames(sunfish.data$feeding.mode,
rownames(sunfish.data))
levels(sunfish.feed_mode)
levels(sunfish.feed_mode)<-c("non-piscivorous",
"piscivorous")
levels(sunfish.feed_mode)
sunfish.ER_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ER")
sunfish.ARD_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ARD")
sunfish.Irr1_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,1,0,0),2,2,
byrow=TRUE))
sunfish.Irr2_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,0,1,0),2,2,
byrow=TRUE))
sunfish.aov<-anova(sunfish.ER_model,
sunfish.Irr1_model,sunfish.Irr2_model,
sunfish.ARD_model)
load("sunfish.simmap.rda")
sunfish.simmap
cols<-setNames(viridisLite::viridis(n=2),
levels(sunfish.feed_mode))
par(mfrow=c(2,3))
plot(sample(sunfish.simmap,6),ftype="i",
fsize=0.6,colors=cols,offset=0.2)
plot(summary(sunfish.simmap),ftype="i",
fsize=0.7,colors=cols,cex=c(0.6,0.3))
legend("topleft",levels(sunfish.feed_mode),pch=21,
pt.cex=1.5,pt.bg=cols,bty="n",cex=0.8)
sunfish.density<-density(sunfish.simmap)
sunfish.density
par(mfrow=c(1,2),las=1,cex.axis=0.7,
cex.lab=0.8)
COLS<-setNames(cols[2:1],sunfish.density$trans)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[1],colors=COLS[1],
main="")
mtext("a) transitions to piscivory",line=1,
adj=0,cex=0.8)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[2],colors=COLS[2],
main="")
mtext("b) transitions to non-piscivory",
line=1,adj=0,cex=0.8)
load("sunfish.densityMap.rda")
sunfish.densityMap
sunfish.densityMap<-setMap(sunfish.densityMap,
viridisLite::viridis(n=10))
plot(sunfish.densityMap,lwd=3,outline=TRUE,
fsize=0.7,legend=0.1)
par(mfrow=c(1,2))
graph.polyMk(k=4,ordered=TRUE,states=0:3,
mar=rep(0.1,4))
mtext("a) ordered polymorphic model",line=-1,
adj=0.2,cex=0.8)
graph.polyMk(k=4,ordered=FALSE,
states=letters[1:4],mar=rep(0.1,4),
spacer=0.15)
mtext("b) unordered polymorphic model",
line=-1,adj=0.2,cex=0.8)
data(butterfly.tree)
data(butterfly.data)
head(butterfly.data)
butterfly.habitat<-setNames(
butterfly.data$habitat,
rownames(butterfly.data))
print(levels(butterfly.habitat))
load("butterfly.fitted_models.rda")
anova(butterfly.ER_unordered,
butterfly.ARD_unordered,
butterfly.transient_unordered)
levs<-c("forest","fringe","open")
levs
butterfly.aov<-anova(butterfly.ER_ordered,
butterfly.ER_unordered,
butterfly.transient_ordered,
butterfly.transient_unordered,
butterfly.ARD_ordered,
butterfly.ARD_unordered)
plot(butterfly.ARD_ordered,asp=0.65,
mar=rep(0.1,4),cex.traits=0.8)
legend("bottomleft",legend=c(
paste("log(L) =",
round(logLik(butterfly.ARD_ordered),2)),
paste("AIC =",
round(AIC(butterfly.ARD_ordered),2))),
bty="n",cex=0.8)
load("butterfly.simmap.rda")
butterfly.simmap
butterfly.summary<-summary(butterfly.simmap)
hab.cols<-setNames(c(rgb(0,1,0),
rgb(0,0.5,0.5),rgb(1/3,1/3,1/3),
rgb(0,0,1),rgb(0.5,0.5,0),
rgb(1,0,0)),levels(butterfly.habitat))
par(fg="transparent")
h<-max(nodeHeights(butterfly.tree))
plot(butterfly.summary,type="arc",
ftype="off",colors=hab.cols,
cex=c(0.4,0.2),part=0.5,lwd=1,
arc_height=0.4)
par(fg="black")
legend("topleft",names(hab.cols),pch=21,
pt.bg=hab.cols,pt.cex=1.5,
cex=0.8,bty="n")
axis(1,pos=-1,at=h-seq(0,h,by=5)+0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
axis(1,pos=-1,at=-h+seq(0,h,by=5)-0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
butterfly.ltt<-ltt(butterfly.simmap)
par(mar=c(5.1,4.1,1.1,1.1))
plot(butterfly.ltt,show.total=FALSE,
bty="n",las=1,cex.axis=0.7,
cex.lab=0.8,colors=hab.cols)
data(liolaemid.tree)
data(liolaemid.data)
head(liolaemid.data)
liolaemid.parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
load(file="liolaemid.hrm.rda")
liolaemid.hrm
packageVersion("phytools")
install.packages("phytools")
install.packages("phytools")
install.packages("phytools")
install.packages("phytools")
install.packages("phytools")
packageVersion("phytools")
library(knitr)
tidy.opts = list(blank = FALSE, width.cutoff = 60)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
# this hook is used only when the linewidth option is not NULL
if (!is.null(n <- options$linewidth)) {
x = knitr:::split_lines(x)
# any lines wider than n should be wrapped
if (any(nchar(x) > n)) x = strwrap(x, width = n)
x = paste(x, collapse = '\n')
}
hook_output(x, options)
})
library(phytools)
packageVersion("phytools")
data(sunfish.tree)
data(sunfish.data)
sunfish.feed_mode<-setNames(sunfish.data$feeding.mode,
rownames(sunfish.data))
levels(sunfish.feed_mode)
levels(sunfish.feed_mode)<-c("non-piscivorous",
"piscivorous")
levels(sunfish.feed_mode)
sunfish.ER_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ER")
sunfish.ARD_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model="ARD")
sunfish.Irr1_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,1,0,0),2,2,
byrow=TRUE))
sunfish.Irr2_model<-fitMk(sunfish.tree,
sunfish.feed_mode,model=matrix(c(0,0,1,0),2,2,
byrow=TRUE))
sunfish.aov<-anova(sunfish.ER_model,
sunfish.Irr1_model,sunfish.Irr2_model,
sunfish.ARD_model)
load("sunfish.simmap.rda")
sunfish.simmap
cols<-setNames(viridisLite::viridis(n=2),
levels(sunfish.feed_mode))
par(mfrow=c(2,3))
plot(sample(sunfish.simmap,6),ftype="i",
fsize=0.6,colors=cols,offset=0.2)
plot(summary(sunfish.simmap),ftype="i",
fsize=0.7,colors=cols,cex=c(0.6,0.3))
legend("topleft",levels(sunfish.feed_mode),pch=21,
pt.cex=1.5,pt.bg=cols,bty="n",cex=0.8)
sunfish.density<-density(sunfish.simmap)
sunfish.density
par(mfrow=c(1,2),las=1,cex.axis=0.7,
cex.lab=0.8)
COLS<-setNames(cols[2:1],sunfish.density$trans)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[1],colors=COLS[1],
main="")
mtext("a) transitions to piscivory",line=1,
adj=0,cex=0.8)
plot(sunfish.density,ylim=c(0,0.6),
transition=names(COLS)[2],colors=COLS[2],
main="")
mtext("b) transitions to non-piscivory",
line=1,adj=0,cex=0.8)
load("sunfish.densityMap.rda")
sunfish.densityMap
sunfish.densityMap<-setMap(sunfish.densityMap,
viridisLite::viridis(n=10))
plot(sunfish.densityMap,lwd=3,outline=TRUE,
fsize=0.7,legend=0.1)
par(mfrow=c(1,2))
graph.polyMk(k=4,ordered=TRUE,states=0:3,
mar=rep(0.1,4))
mtext("a) ordered polymorphic model",line=-1,
adj=0.2,cex=0.8)
graph.polyMk(k=4,ordered=FALSE,
states=letters[1:4],mar=rep(0.1,4),
spacer=0.15)
mtext("b) unordered polymorphic model",
line=-1,adj=0.2,cex=0.8)
data(butterfly.tree)
data(butterfly.data)
head(butterfly.data)
butterfly.habitat<-setNames(
butterfly.data$habitat,
rownames(butterfly.data))
print(levels(butterfly.habitat))
load("butterfly.fitted_models.rda")
anova(butterfly.ER_unordered,
butterfly.ARD_unordered,
butterfly.transient_unordered)
levs<-c("forest","fringe","open")
levs
butterfly.aov<-anova(butterfly.ER_ordered,
butterfly.ER_unordered,
butterfly.transient_ordered,
butterfly.transient_unordered,
butterfly.ARD_ordered,
butterfly.ARD_unordered)
plot(butterfly.ARD_ordered,asp=0.65,
mar=rep(0.1,4),cex.traits=0.8)
legend("bottomleft",legend=c(
paste("log(L) =",
round(logLik(butterfly.ARD_ordered),2)),
paste("AIC =",
round(AIC(butterfly.ARD_ordered),2))),
bty="n",cex=0.8)
load("butterfly.simmap.rda")
butterfly.simmap
butterfly.summary<-summary(butterfly.simmap)
hab.cols<-setNames(c(rgb(0,1,0),
rgb(0,0.5,0.5),rgb(1/3,1/3,1/3),
rgb(0,0,1),rgb(0.5,0.5,0),
rgb(1,0,0)),levels(butterfly.habitat))
par(fg="transparent")
h<-max(nodeHeights(butterfly.tree))
plot(butterfly.summary,type="arc",
ftype="off",colors=hab.cols,
cex=c(0.4,0.2),part=0.5,lwd=1,
arc_height=0.4)
par(fg="black")
legend("topleft",names(hab.cols),pch=21,
pt.bg=hab.cols,pt.cex=1.5,
cex=0.8,bty="n")
axis(1,pos=-1,at=h-seq(0,h,by=5)+0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
axis(1,pos=-1,at=-h+seq(0,h,by=5)-0.4*h,
labels=seq(0,h,by=5),cex.axis=0.8)
butterfly.ltt<-ltt(butterfly.simmap)
par(mar=c(5.1,4.1,1.1,1.1))
plot(butterfly.ltt,show.total=FALSE,
bty="n",las=1,cex.axis=0.7,
cex.lab=0.8,colors=hab.cols)
data(liolaemid.tree)
data(liolaemid.data)
head(liolaemid.data)
liolaemid.parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
load(file="liolaemid.hrm.rda")
liolaemid.hrm
liolaemid.hrm<-fitHRM(liolaemid.tree,liolaemiod.parity,ncat=2,
umbral=TRUE,pi="fitzjohn",parallel=TRUE)
liolaemid.parity<-setNames(liolaemid.data$parity_mode,
rownames(liolaemid.data))
liolaemid.hrm<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=2,
umbral=TRUE,pi="fitzjohn",parallel=TRUE)
liolaemid.hrm
liolaemid.mk
liolaemid.mk<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=1,
pi="fitzjohn",parallel=TRUE,quiet=TRUE)
liolaemid.full<-fitHRM(liolaemid.tree,liolaemid.parity,ncat=2,
pi="fitzjohn",parallel=TRUE,quiet=TRUE)
anova(liolaemid.mk,liolaemid.hrm,liolaemid.full)
save(liolaemid.hrm,liolaemid.mk,liolaemid.full,file="liolaemid.hrm.rda")
citation()
?viridis
?anc.Bayes
